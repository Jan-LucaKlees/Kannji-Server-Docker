# the version of the docker-compose file
version: '2.1'

# list of services - meaning containers - to be managed by docker-compose
services:

  # the api-db container
  api-db:

    # this builds an image using the Dockerfile found at the path specified by the context attribute.
    build:
      context: ./api-db/

    # this will be the name of the image, once it's built
    image: kannji_api-db

    # environment variables which will be accessible in the running container
    # the values of ${API_DB_USER}, ${API_DB_PASSWORD}, ${API_DB_DBNAME} come from the .env file lying in the same dir as this file
    environment:
      - POSTGRES_USER=${API_DB_USER}
      - POSTGRES_PASSWORD=${API_DB_PASSWORD}
      - POSTGRES_DB=${API_DB_DBNAME}

    # this defines how this container will be rated as "healthy"
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 10s
      retries: 15

    # which networks is the container connected to
    networks:
      - api

    # volumes to be mounted in the container
    volumes:
      - ./api-db/data/:/var/lib/postgresql/data/

  api-server:
    build:
      context: ./api-server/
      args:
        - API_DEV_SERVER_SSH_PW
    image: kannji_api-server
    environment:
      - API_DB_USER
      - API_DB_PASSWORD
      - API_DB_DBNAME
      - API_SERVER_SECRET_KEY
    ports:
      - "8022:22"
    depends_on:
      api-db:
        condition: service_healthy
    networks:
      - api
      - nginx

  nginx:
    build:
      context: ./nginx/
    image: kannji_nginx
    ports:
      - "8080:80"
      - "8443:443"
    networks:
      - nginx
    depends_on:
      - api-server

networks:
  api:
  nginx: